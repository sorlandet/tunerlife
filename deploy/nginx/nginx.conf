user nginx nginx;
worker_processes  8;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
    accept_mutex on; # "on" if nginx worker_processes > 1
    use epoll; # enable for Linux 2.6+
    # use kqueue; # enable for FreeBSD, OSX
}


http {
    # nginx will find this file in the config directory set at nginx build time
    include /etc/nginx/mime.types;

    # fallback in case we can't determine a type
    default_type  application/octet-stream;

    # click tracking!
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log combined;


    # you generally want to serve static files with nginx since neither
    # Unicorn nor Rainbows! is optimized for it at the moment
    sendfile    on;

    tcp_nopush  on;  # off may be better for *some* Comet/long-poll stuff
    tcp_nodelay off; # on may be better for some Comet/long-poll stuff

    # we haven't checked to see if Rack::Deflate on the app server is
    # faster or not than doing compression via nginx.  It's easier
    # to configure it all in one place here for static files and also
    # to disable gzip for clients who don't get gzip/deflate right.
    # There are other other gzip settings that may be needed used to deal with
    # bad clients out there, see http://wiki.nginx.org/NginxHttpGzipModule
    gzip on;
    gzip_vary on;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_min_length 500;
    gzip_disable "MSIE [1-6]\.";
    gzip_types text/plain text/xml text/css
               text/comma-separated-values
               text/javascript application/x-javascript
               application/atom+xml;


    client_body_buffer_size   1K;
    client_header_buffer_size 1k;
    client_max_body_size      100m;
    large_client_header_buffers 2 1k;

    client_body_timeout   10;
    client_header_timeout 10;

    # ~2 seconds is often enough for most folks to parse HTML/CSS and
    # retrieve needed images/icons/frames, connections are cheap in
    # nginx so increasing this is generally safe...
    keepalive_timeout     5;

    send_timeout          10;

    # Directive describes the zone, in which the session states are stored i.e. store in slimits. ###
    # 1m can handle 32000 sessions with 32 bytes/session, set to 5m x 32000 session ###
    limit_conn_zone $binary_remote_addr zone=addr:5m;

    # Control maximum number of simultaneous connections for one session i.e. ###
    # restricts the amount of connections from a single ip address ###
    limit_conn addr 50;

    include /etc/nginx/conf.d/*.conf;
}
